<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="FolderBrow.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>